name: Jira PR Automation

on:
  pull_request:
    types: [opened, reopened, synchronize, closed, edited]

jobs:
  jira:
    runs-on: ubuntu-latest

    steps:
      - name: Extract Jira keys from branch + PR
        id: extract
        run: |
          BRANCH="${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
          TITLE="${{ github.event.pull_request.title }}"
          BODY="${{ github.event.pull_request.body }}"

          echo "Branch: $BRANCH"
          echo "Title: $TITLE"
          echo "Body: $BODY"

          # Collect all Jira keys from branch, title, and description
          ALL_TEXT="$BRANCH $TITLE $BODY"
          JIRA_KEYS=$(echo "$ALL_TEXT" | grep -oE '[A-Z][A-Z0-9]{1,9}-[0-9]+' | tr ' ' '\n' | sort -u | tr '\n' ' ' | sed 's/ *$//')

          if [ -n "$JIRA_KEYS" ]; then
            echo "JIRA_KEYS=$JIRA_KEYS" >> $GITHUB_ENV
            echo "found=true" >> $GITHUB_ENV
            echo "‚úÖ Found Jira keys: $JIRA_KEYS"
          else
            echo "found=false" >> $GITHUB_ENV
            echo "‚ö†Ô∏è No Jira issue key found."
          fi

      - name: Stop if no Jira key
        if: env.found == 'false'
        run: echo "Skipping Jira integration (no Jira key detected)."

      - name: Link PR to Jira issues
        if: env.found == 'true' && github.event.action != 'closed'
        run: |
          for KEY in $JIRA_KEYS; do
            echo "üîó Linking PR to $KEY"
            curl -X POST \
              -u "${{ secrets.JIRA_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
              -H "Content-Type: application/json" \
              --data "{
                \"object\": {
                  \"url\": \"${{ github.event.pull_request.html_url }}\",
                  \"title\": \"${{ github.event.pull_request.title }}\"
                }
              }" \
              "${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue/$KEY/remotelink"
          done

      - name: Add Jira comment (PR opened/reopened/updated/edited)
        if: env.found == 'true' && (github.event.action == 'opened' || github.event.action == 'reopened' || github.event.action == 'synchronize' || github.event.action == 'edited')
        run: |
          for KEY in $JIRA_KEYS; do
            echo "üí¨ Commenting on $KEY"
            curl -X POST \
              -u "${{ secrets.JIRA_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
              -H "Content-Type: application/json" \
              --data "{
                \"body\": \"üîó Pull Request [${{ github.event.pull_request.title }}](${{ github.event.pull_request.html_url }}) has been **${{ github.event.action }}**.\"
              }" \
              "${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue/$KEY/comment"
          done

      - name: Transition Jira issues to In Progress (when PR opened)
        if: env.found == 'true' && (github.event.action == 'opened' || github.event.action == 'reopened')
        run: |
          for KEY in $JIRA_KEYS; do
            TRANSITION_ID=$(curl -s -X GET \
              -u "${{ secrets.JIRA_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
              -H "Content-Type: application/json" \
              "${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue/$KEY/transitions" \
              | jq -r '.transitions[] | select(.name=="In Progress") | .id')

            if [ -n "$TRANSITION_ID" ]; then
              echo "üöÄ Moving $KEY to In Progress"
              curl -X POST \
                -u "${{ secrets.JIRA_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
                -H "Content-Type: application/json" \
                --data "{
                  \"transition\": { \"id\": \"$TRANSITION_ID\" }
                }" \
                "${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue/$KEY/transitions"
            fi
          done

      - name: Transition Jira issues to Done (when PR merged)
        if: env.found == 'true' && github.event.action == 'closed' && github.event.pull_request.merged == true
        run: |
          for KEY in $JIRA_KEYS; do
            TRANSITION_ID=$(curl -s -X GET \
              -u "${{ secrets.JIRA_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
              -H "Content-Type: application/json" \
              "${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue/$KEY/transitions" \
              | jq -r '.transitions[] | select(.name=="Done") | .id')

            if [ -n "$TRANSITION_ID" ]; then
              echo "‚úÖ Moving $KEY to Done"
              curl -X POST \
                -u "${{ secrets.JIRA_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
                -H "Content-Type: application/json" \
                --data "{
                  \"transition\": { \"id\": \"$TRANSITION_ID\" }
                }" \
                "${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue/$KEY/transitions"
            fi
          done

      - name: Add Jira comment (PR merged)
        if: env.found == 'true' && github.event.action == 'closed' && github.event.pull_request.merged == true
        run: |
          for KEY in $JIRA_KEYS; do
            echo "üí¨ Commenting merge on $KEY"
            curl -X POST \
              -u "${{ secrets.JIRA_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
              -H "Content-Type: application/json" \
              --data "{
                \"body\": \"‚úÖ Pull Request [${{ github.event.pull_request.title }}](${{ github.event.pull_request.html_url }}) has been **merged** and the issue is marked as Done.\"
              }" \
              "${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue/$KEY/comment"
          done
